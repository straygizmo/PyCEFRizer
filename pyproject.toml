[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pycefrizer"
version = "3.0.0"
description = "PyCEFRizer - CEFR-J Level Estimator for analyzing English text difficulty"
readme = "README.md"
authors = [
    {name = "PyCEFRizer Contributors", email = ""}
]
license = {file = "LICENSE"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Education",
]
dependencies = [
    "spacy>=3.7.2",
    "textstat>=0.7.4",
    "nltk>=3.8",
]

[project.urls]
"Homepage" = "https://github.com/straygizmo/PyCEFRizer"
"Bug Tracker" = "https://github.com/straygizmo/PyCEFRizer/issues"
"Documentation" = "https://github.com/straygizmo/PyCEFRizer#readme"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.12",
    "black>=23.0",
    "ruff>=0.1.0",
    "mypy>=1.8",
]

test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.12",
]

[project.scripts]
pycefrizer = "pycefrizer.cli:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["pycefrizer"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/cli.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
]

[tool.setuptools.packages.find]
where = ["."]
include = ["pycefrizer*"]

[tool.setuptools.package-data]
pycefrizer = ["data/*.json"]
